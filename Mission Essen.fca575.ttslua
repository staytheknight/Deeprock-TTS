missionEssenPositions = {
    hiddenCaveLoc1 = {{-3.85, 1.09, -0.75},{-4.95, 1.09, -0.75},{-4.40, 1.09, 0.20}},
    hiddenCaveRot1 = {{0.03, 300.01, 0.09},{359.91, 59.97, 359.99},{0.06, 180.00, 359.93}},
    hiddenCaveLoc2 = {{5.50, 1.11, -1.70},{4.95, 1.11, -0.75},{6.05, 1.11, -0.75}},
    hiddenCaveRot2 = {{359.94, 0.00, 0.07},{359.97, 120.06, 359.91},{0.09, 240.04, 0.01}},
    hiddenCaveLoc3 = {{4.40, 1.10, -5.51},{3.85, 1.10, -4.56},{4.95, 1.10, -4.56}},
    hiddenCaveRot3 = {{359.94, 0.00, 0.07},{359.97, 120.06, 359.91},{0.09, 240.04, 0.01}},
    slasher = {{0.00, 2.25, 2.11}},
    webspitters = {{-1.10, 2.24, -1.70},{0.55, 2.24, -2.66}},
    spitballer = {{-4.40, 2.20, -5.51}},
    stalagmites = {{-2.75, 2.23, 3.06},{-2.20, 2.23, 4.01}},
    explorationTiles = {{-5.50, 2.32, -7.42},{2.20, 2.36, 0.20},{-1.10, 2.35, 4.01},
    {-3.85, 2.35, 4.96},{-6.05, 2.34, 3.06}},
    minerals = {{1.65, 1.20, -4.56},{2.20, 1.20, -5.52},{-0.55, 1.19, -6.47},{-1.10, 1.19, -7.42}
    ,{-2.20, 1.19, -7.42},{-7.15, 1.19, -0.75},{-6.60, 1.19, 0.20},{-6.05, 1.19, 1.15}
    ,{0.00, 1.20, 4.01},{0.55, 1.20, 3.06}}
}

function setupMissionEssen()
    print("Launching Mission Essen: Hot Times on Hoxxes\nGood Luck Miners!\n")

    local caveBag = Global.call('getCaveBag')
    local biomeCaveBag = Global.call('getBiomeCaveBag')

    params={
        bag = caveBag,
        ID = Global.call('getDropPodGUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {3.85, 1.23, 3.06},
            rotation = {0.0,0.0,180.0},
            guid = Global.call('getDropPodGUID'),
            -- Lock tiles afer spawn
            --callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup Drop Pod, object is not in cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveSeg1GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-4.40, 1.21, -5.51},
            rotation = {359.94, 359.99, 180.07},
            guid = Global.call('getCaveSeg1GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveSeg1GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-4.40, 1.21, -5.51},
            rotation = {359.94, 359.99, 180.07},
            guid = Global.call('getCaveSeg1GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveSeg2GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-3.30, 1.24, 4.01},
            rotation = {0.04, 300.00, 180.08},
            guid = Global.call('getCaveSeg2GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveSeg3GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {0.00, 1.25, 0.20},
            rotation = {359.95, 120.00, 179.92},
            guid = Global.call('getCaveSeg3GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveEntrance1GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {6.60, 1.23, -1.71},
            rotation = {0.0,0.0,0.0},
            guid = Global.call('getCaveEntrance1GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave exit 1, it is not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveEntrance2GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-2.75, 1.22, -2.66},
            rotation = {0.0,0.0,0.0},
            guid = Global.call('getCaveEntrance2GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave exit 2, it is not in the cave bag')
    end

    -- Hidden cave segments
    local hiddenCaveBag = Global.call('getHiddenCaveBag') -- need to call global function to get proper object ID
    hiddenCaveBag.shuffle()

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',hiddenCaveBag) then
        hiddenCaveBag.takeObject({
            position = missionEssenPositions.hiddenCaveLoc1[randomIndex],
            rotation = missionEssenPositions.hiddenCaveRot1[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',hiddenCaveBag) then
        hiddenCaveBag.takeObject({
            position = missionEssenPositions.hiddenCaveLoc2[randomIndex],
            rotation = missionEssenPositions.hiddenCaveRot2[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',hiddenCaveBag) then
        hiddenCaveBag.takeObject({
            position = missionEssenPositions.hiddenCaveLoc3[randomIndex],
            rotation = missionEssenPositions.hiddenCaveRot3[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    -- need to call global function to get proper object ID
    local stalagmiteModelBag = Global.call('getStalagmiteModelBag')
    -- Stalagmites
    for i=1, 2 do
        stalagmiteModelBag.takeObject({
            position = missionEssenPositions.stalagmites[i],
            -- rotation = -- ADD RANDOM
        })
    end

    local slasherBag = Global.call('getSlasherBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',slasherBag) then
            slasherBag.takeObject({
                position = missionEssenPositions.slasher,
                rotation = {0.0, 30.0 , 0.0}
            })
        else
            print("Warning: Unable to setup slasher, the bag is empty")
            break
        end
    end

    local webspitterBag = Global.call('getWebspitterBag')
    for i=1, 2 do
        if not Global.call('isBagEmpty',webspitterBag) then
            webspitterBag.takeObject({
                position = missionEssenPositions.webspitters[i],
                rotation = {0.0, 30.0 , 0.0}
            })
        else
            print("Warning: Unable to setup webspitter, the bag is empty")
            break
        end
    end

    local spitballerBag = Global.call('getSpitballerBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',spitballerBag) then
            spitballerBag.takeObject({
                position = missionEssenPositions.spitballer,
                rotation = {0.0, 30.0 , 0.0}
            })
        else
            print("Warning: Unable to setup spitballer, the bag is empty")
            break
        end
    end

    local explorationBag = Global.call('getExplorationBag')

    local lootBugBag = Global.call('getLootBugBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',lootBugBag) then
            explorationBag.putObject(lootBugBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, loot bug bag is empty")
        end
    end

    local redSugarBag = Global.call('getRedSugarBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',redSugarBag) then
            explorationBag.putObject(redSugarBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, red sugar bag is empty")
        end
    end

    local barleyBulbBag = Global.call('getBarleyBulbBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',barleyBulbBag) then
            explorationBag.putObject(barleyBulbBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, barley bulb bag is empty")
            break
        end
    end

    local eggBag = Global.call('getEggBag')
    for i=1, 5 do
        if not Global.call('isBagEmpty',eggBag) then
            explorationBag.putObject(eggBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, egg bag is empty")
            break
        end
    end

    -- Shuffling Exploration Tiles
    explorationBag.shuffle()

    -- Placing Exploration Tiles
    -- Originally places 7, some kept in bag for hidden cave code to work
    for i=1, 5 do
        if not Global.call('isBagEmpty',explorationBag) then
            explorationBag.takeObject({
                position = missionEssenPositions.explorationTiles[i],
                rotation = {0.0, 0.0, 180.0}
            })
        else
            print("Warning: Unable to setup exploration tokens, the bag is empty")
            break
        end
    end

    -- Generating Mineral Bag
    local mineralBag = Global.call('getMineralBag')

    local goldBag = Global.call('getGoldBag')
    for i=1, 3 do
        if not Global.call('isBagEmpty',goldBag) then
            mineralBag.putObject(goldBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the gold bag is empty")
        end
    end

    local nitraBag = Global.call('getNitraBag')
    for i=1, 4 do
        if not Global.call('isBagEmpty',nitraBag) then
            mineralBag.putObject(nitraBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the nitra bag is empty")
            break
        end
    end

    local aquardBag = Global.call('getAquardBag')
    for i=1, 3 do
        if not Global.call('isBagEmpty',aquardBag) then
            mineralBag.putObject(aquardBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the aquard bag is empty")
            break
        end
    end

    -- Shuffling Minerals
    mineralBag.shuffle()

    -- Placing Minerals
    for i=1, 10 do
        if not Global.call('isBagEmpty',mineralBag) then
            mineralBag.takeObject({
                position = missionEssenPositions.minerals[i]
            })
        else
            print("Warning: Unable to set up minerals, the bag is empty")
        end
    end
end
