missionB5Positions = {
    hiddenCaveLoc1 = {{4.95, 1.10, -4.56},{5.50, 1.10, -5.51},{4.40, 1.10, -5.51}},
    hiddenCaveRot1 = {{0.06, 180.01, 359.93},{0.03, 300.00, 0.09},{359.91, 60.00, 359.99}},
    stalagmites = {{-2.75, 2.24, -2.66},{-0.53, 2.25, -0.73}},
    geysers = {{-2.20, 2.24, 0.23},{2.20, 2.25, -1.70}},
    grunts = {{-4.40, 2.24, 2.11}},
    broodNexus = {{-0.56, 2.25, 1.15}},
    explorationTiles = {{-5.50, 2.36, 2.10},{-1.65, 2.36, -0.75},{-4.95,2.36, -4.56},
    {-3.30,2.36, -5.52},{-1.65, 2.36, -4.56},{1.10, 2.36, -3.61},{2.75, 2.36, 1.15}},
    minerals = {{-6.05, 1.20, 3.06},{-4.95, 1.19, -6.47},{-3.85, 1.19, -6.47},
    {4.95, 1.20, -2.66},{6.05, 1.21, -2.66},{3.85, 1.21, 3.06},{4.40, 1.21, 4.01},
    {4.95, 1.21, 3.06}}
}

function setupMissionB5()
    print("Launching Mission 5: Cooked Caverns\nGood Luck Miners!\n")

    local caveBag = Global.call('getCaveBag')
    local biomeCaveBag = Global.call('getBiomeCaveBag')

    params={
        bag = caveBag,
        ID = Global.call('getDropPodGUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-3.30, 1.23, 4.01},
            rotation = {0.0,0.0,180.0},
            guid = Global.call('getDropPodGUID'),
            -- Lock tiles afer spawn
            --callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup Drop Pod, object is not in cave bag')
    end

    params={
        bag = biomeCaveBag,
        ID = Global.call('getIceSegL_GUID'),
    }
    if Global.call('isInBag',params) then
        biomeCaveBag.takeObject({
            position = {-3.85, 1.25, 1.15},
            rotation = {359.94, 359.99, 180.07},
            guid = Global.call('getIceSegL_GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the biome cave bag')
    end


    params={
        bag = biomeCaveBag,
        ID = Global.call('getIceSegLong_GUID'),
    }
    if Global.call('isInBag',params) then
        biomeCaveBag.takeObject({
            position = {1.65, 1.25, -0.75},
            rotation = {0.08, 209.99, 179.97},
            guid = Global.call('getIceSegLong_GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the biome cave bag')
    end


    params={
        bag = biomeCaveBag,
        ID = Global.call('getIceSegMed_GUID'),
    }
    if Global.call('isInBag',params) then
        biomeCaveBag.takeObject({
            position = {-3.30, 1.24, -3.61},
            rotation = {0.05, 180.00, 179.92},
            guid = Global.call('getIceSegMed_GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the biome cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveEntrance1GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-4.40, 1.24, -1.70},
            rotation = {0.0,0.0,0.0},
            guid = Global.call('getCaveEntrance1GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave exit 1, it is not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveEntrance2GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {3.85, 1.25, -0.75},
            rotation = {0.0,0.0,0.0},
            guid = Global.call('getCaveEntrance2GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave exit 2, it is not in the cave bag')
    end


    local hiddenCaveBag = Global.call('getHiddenCaveBag') -- need to call global function to get proper object ID
    hiddenCaveBag.shuffle()

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',hiddenCaveBag) then
        hiddenCaveBag.takeObject({
            position = missionB5Positions.hiddenCaveLoc1[randomIndex],
            rotation = missionB5Positions.hiddenCaveRot1[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    params={
        bag = biomeCaveBag,
        ID = Global.call('getDreadCocoonHex_GUID'),
    }
    if Global.call('isInBag',params) then
        biomeCaveBag.takeObject({
            position = {0.01, 1.39, -1.71},
            rotation = {0.03, 300.17, 180.09},
            guid = Global.call('ggetDreadCocoonHex_GUID'),
        })
    else
        print('Warning: Unable to setup dreadnought cocoon, it is not in the biome cave bag')
    end

    local stalagmiteModelBag = Global.call('getStalagmiteModelBag')
    -- Placing Stalagmites
    for i=1, 2 do
        stalagmiteModelBag.takeObject({
            position = missionB5Positions.stalagmites[i],
            -- rotation = -- ADD RANDOM
        })
    end

    -- Geyser placements
    local geyserBag = Global.call('getGeyserBag')
    for i=1, 2 do
        if not Global.call('isBagEmpty',geyserBag) then
            geyserBag.takeObject({
                position = missionB5Positions.geysers[i]
            })
        else
            print("Warning: Unable to set up geysers, the geyser bag is empty")
        end
    end

    -- Placing Grunts
    local gruntBag = Global.call('getGruntBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',gruntBag) then
            gruntBag.takeObject({
                position = missionB5Positions.grunts[i],

            })
        else
            print("Warning: Unable to setup grunts, the grunt bag is empty")
            break
        end
    end

    local broodNexusBag = Global.call('getbroodNexusBag')
    if not Global.call('isBagEmpty',broodNexusBag) then
        broodNexusBag.takeObject({
            position = missionB5Positions.broodNexus[1],
            rotation = {359.99, 269.78, 359.92}
        })
    else
        print("Warning: Unable to setup brood nexus, the brood nexus bag is empty")
    end

    local explorationBag = Global.call('getExplorationBag')
    local lootBugBag = Global.call('getLootBugBag')
    for i=1, 2 do
        if not Global.call('isBagEmpty',lootBugBag) then
            explorationBag.putObject(lootBugBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, loot bug bag is empty")
        end
    end

    local redSugarBag = Global.call('getRedSugarBag')
    for i=1, 2 do
        if not Global.call('isBagEmpty',redSugarBag) then
            explorationBag.putObject(redSugarBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, red sugar bag is empty")
        end
    end

    local fossilBag = Global.call('getFossilBag')
    for i=1, 4 do
        if not Global.call('isBagEmpty',fossilBag) then
            explorationBag.putObject(fossilBag.takeObject())
        else
            print("Warning: Unable to setup exploration tokens, fossil bag is empty")
            break
        end
    end

    -- Shuffling Exploration Tiles
    explorationBag.shuffle()

    -- Placing Exploration Tiles
    -- Originally places 7, some kept in bag for hidden cave code to work
    for i=1, 7 do
        if not Global.call('isBagEmpty',explorationBag) then
            explorationBag.takeObject({
                position = missionB5Positions.explorationTiles[i],
                rotation = {0.0, 0.0, 180.0}
            })
        else
            print("Warning: Unable to setup exploration tokens, the bag is empty")
            break
        end
    end

    -- Generating Mineral Bag
    local mineralBag = Global.call('getMineralBag')

    local goldBag = Global.call('getGoldBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',goldBag) then
            mineralBag.putObject(goldBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the gold bag is empty")
        end
    end

    local nitraBag = Global.call('getNitraBag')
    for i=1, 7 do
        if not Global.call('isBagEmpty',nitraBag) then
            mineralBag.putObject(nitraBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the nitra bag is empty")
            break
        end
    end

    -- Placing Minerals
    mineralBag.shuffle()
    for i=1, 8 do
        if not Global.call('isBagEmpty',mineralBag) then
            mineralBag.takeObject({
                position = missionB5Positions.minerals[i]
            })
        else
            print("Warning: Unable to set up minerals, the bag is empty")
        end
    end

    local missionBookB1 = Global.call('getMissionBookB1')
    missionBookB1.setScale({2.0,1.0,2.0})
    missionBookB1.setPosition({-53.52, 0.97, -35.66})
    missionBookB1.Book.setPage(23)
    local missionBookB2 = Global.call('getMissionBookB2')
    missionBookB2.setScale({2.0,1.0,2.0})
    missionBookB2.setPosition({-47.86, 0.97, -35.63})
    missionBookB2.Book.setPage(24)
end
