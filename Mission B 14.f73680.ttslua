missionB14Positions = {
    hiddenCaveLoc1 = {{-4.40, 1.10, 4.01},{-3.85, 1.10, 3.06},{-4.95, 1.10, 3.06}},
    hiddenCaveRot1 = {{0.06, 180.01, 359.93},{0.03, 300.00, 0.09},{359.91, 60.00, 359.99}},
    hiddenCaveLoc2 = {{-5.50, 1.09, 0.20},{-4.95, 1.09, -0.75},{-6.05, 1.09, -0.75}},
    hiddenCaveRot2 = {{0.06, 179.99, 359.93},{0.03, 300.01, 0.09},{359.91, 60.00, 359.99}},
    hiddenCaveLoc3 = {{-4.95, 1.09, -4.56},{-4.40, 1.09, -5.51},{-5.50, 1.09, -5.52}},
    hiddenCaveRot3 = {{0.06, 180.00, 359.93},{0.03, 300.01, 0.09},{359.91, 60.01, 359.99}},
    hiddenCaveLoc4 = {{2.20, 1.10, -5.51},{2.75, 1.10, -4.56},{3.30, 1.10, -5.51}},
    hiddenCaveRot4 = {{359.91, 60.00, 359.99},{0.06, 180.03, 359.93},{0.03, 299.98, 0.09}},
    stalagmites = {{-1.65, 2.24, -2.66},{5.50, 2.24, 4.01}},
    geysers = {{-1.65, 1.24, -0.75},{1.65, 1.24, 3.06}},
    nHatchlings = {{0.55, 2.24, -0.75},{1.10, 2.24, 2.10}},
    nBreeder = {{-0.55, 2.24, -4.56}},
    qShellback = {{-2.18,2.24, -3.59}},
    explorationTiles = {{-1.11, 2.24, -3.60},{0.55, 2.24, 1.15},{2.20, 2.24, 2.10},
    {3.85, 2.24, 1.15},{5.50, 2.24, 2.10}},
    minerals = {{6.60, 1.21, 4.01},{-6.60, 1.20, 4.01},{-2.75, 1.20, 1.15},
    {-3.30, 1.20, 0.20},{-2.75, 1.19, -6.47},{-2.20, 1.19, -7.42},{0.55, 1.19, -6.47},
    {4.95, 1.20, -4.56},{4.95, 1.20, -6.47}},
}

function setupMissionB14()
    print("Launching Mission 14: Boiling Hot Fun\nGood Luck Miners!\n")

    local caveBag = Global.call('getCaveBag')
    local biomeCaveBag = Global.call('getBiomeCaveBag')

    params={
        bag = caveBag,
        ID = Global.call('getDropPodGUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {3.85, 1.23, -0.75},
            rotation = {359.94, 0.00, 180.07},
            guid = Global.call('getDropPodGUID'),
            -- Lock tiles afer spawn
            --callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup Drop Pod, object is not in cave bag')
    end

    params={
        bag = biomeCaveBag,
        ID = Global.call('getIceSegLong_GUID'),
    }
    if Global.call('isInBag',params) then
        biomeCaveBag.takeObject({
            position = {-0.55, 1.25, -0.75},
            rotation = {0.09, 210.00, 179.97},
            guid = Global.call('getIceSegLong_GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the biome cave bag')
    end


    params={
        bag = biomeCaveBag,
        ID = Global.call('getIceSegMed_GUID'),
    }
    if Global.call('isInBag',params) then
        biomeCaveBag.takeObject({
            position = {3.85, 1.26, 3.06},
            rotation = {0.06, 179.99, 179.93},
            guid = Global.call('getIceSegMed_GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the biome cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveEntrance1GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-2.75, 1.24, -2.66},
            rotation = {0.0,0.0,0.0},
            guid = Global.call('getCaveEntrance1GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave exit 1, it is not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveEntrance2GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {3.85, 1.26, 4.96},
            rotation = {0.0,0.0,0.0},
            guid = Global.call('getCaveEntrance2GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave exit 2, it is not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getHexPit3GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {0.55, 1.25, -2.66},
            rotation = {0.10, 240.00, 0.03},
            guid = Global.call('getHexPit3GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup pits, pit tiles are not in the cave bag')
    end

    local hiddenCaveBag = Global.call('getHiddenCaveBag') -- need to call global function to get proper object ID
    hiddenCaveBag.shuffle()

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',hiddenCaveBag) then
        hiddenCaveBag.takeObject({
            position = missionB14Positions.hiddenCaveLoc1[randomIndex],
            rotation = missionB14Positions.hiddenCaveRot1[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',hiddenCaveBag) then
        hiddenCaveBag.takeObject({
            position = missionB14Positions.hiddenCaveLoc2[randomIndex],
            rotation = missionB14Positions.hiddenCaveRot2[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',hiddenCaveBag) then
        hiddenCaveBag.takeObject({
            position = missionB14Positions.hiddenCaveLoc3[randomIndex],
            rotation = missionB14Positions.hiddenCaveRot3[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',hiddenCaveBag) then
        hiddenCaveBag.takeObject({
            position = missionB14Positions.hiddenCaveLoc4[randomIndex],
            rotation = missionB14Positions.hiddenCaveRot4[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end


    local stalagmiteModelBag = Global.call('getStalagmiteModelBag')
    -- Placing Stalagmites
    for i=1, 2 do
        stalagmiteModelBag.takeObject({
            position = missionB14Positions.stalagmites[i],
            -- rotation = -- ADD RANDOM
        })
    end

    -- Geyser placements
    local geyserBag = Global.call('getGeyserBag')
    for i=1, 2 do
        if not Global.call('isBagEmpty',geyserBag) then
            geyserBag.takeObject({
                position = missionB14Positions.geysers[i],
                callback="afterSpawnLock", callback_owner=Global
            })
        else
            print("Warning: Unable to set up geysers, the geyser bag is empty")
        end
    end

    local nHatchlingsBag = Global.call('getNaedoHatchlingBag')
    for i=1, 2 do
        if not Global.call('isBagEmpty',nHatchlingsBag) then
            nHatchlingsBag.takeObject({
                position = missionB14Positions.nHatchlings[i]
            })
        else
            print("Warning: Unable to setup Naedocyte Hatchling, the bag is empty")
        end
    end

    local nBreeder = Global.call('getNaedoBreederBag')
    if not Global.call('isBagEmpty',nBreeder) then
        nBreeder.takeObject({
            position = missionB14Positions.nBreeder[1]
        })
    else
        print("Warning: Unable to setup Naedocyte Hatchling, the bag is empty")
    end

    local qShellbackBag = Global.call('getQShellbackBag')
    if not Global.call('isBagEmpty',qShellbackBag) then
        qShellbackBag.takeObject({
            position = missionB14Positions.qShellback[1]
        })
    else
        print("Warning: Unable to setup Naedocyte Hatchling, the bag is empty")
    end

    -- Generating exploration bag
    local explorationBag = Global.call('getExplorationBag')

    local lootBugBag = Global.call('getLootBugBag')
    for i=1, 2 do
        if not Global.call('isBagEmpty',lootBugBag) then
            explorationBag.putObject(lootBugBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, loot bug bag is empty")
        end
    end

    local redSugarBag = Global.call('getRedSugarBag')
    for i=1, 2 do
        if not Global.call('isBagEmpty',redSugarBag) then
            explorationBag.putObject(redSugarBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, red sugar bag is empty")
        end
    end

    local barleyBulbBag = Global.call('getBarleyBulbBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',barleyBulbBag) then
            explorationBag.putObject(barleyBulbBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, barley bulb bag is empty")
            break
        end
    end

    local apocaBloomBag = Global.call('getApocaBloomBag')
    for i=1, 4 do
        if not Global.call('isBagEmpty',apocaBloomBag) then
            explorationBag.putObject(apocaBloomBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, apoca bloom bag is empty")
            break
        end
    end

    explorationBag.shuffle()
    for i=1, 5 do
        if not Global.call('isBagEmpty',explorationBag) then
            explorationBag.takeObject({
                position = missionB14Positions.explorationTiles[i],
                rotation = {0.0, 0.0, 180.0}
            })
        else
            print("Warning: Unable to setup exploration tokens, the bag is empty")
            break
        end
    end

    -- Generating Mineral Bag
    local mineralBag = Global.call('getMineralBag')

    local goldBag = Global.call('getGoldBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',goldBag) then
            mineralBag.putObject(goldBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the gold bag is empty")
        end
    end

    local nitraBag = Global.call('getNitraBag')
    for i=1, 4 do
        if not Global.call('isBagEmpty',nitraBag) then
            mineralBag.putObject(nitraBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the nitra bag is empty")
            break
        end
    end

    local aquardBag = Global.call('getAquardBag')
    for i=1, 4 do
        if not Global.call('isBagEmpty',aquardBag) then
            mineralBag.putObject(aquardBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the aquard bag is empty")
            break
        end
    end

    -- Shuffling Minerals
    mineralBag.shuffle()

    -- Placing Minerals
    for i=1, 9 do
        if not Global.call('isBagEmpty',mineralBag) then
            mineralBag.takeObject({
                position = missionB14Positions.minerals[i]
            })
        else
            print("Warning: Unable to set up minerals, the bag is empty")
        end
    end

    local missionBookB1 = Global.call('getMissionBookB1')
    missionBookB1.setScale({2.0,1.0,2.0})
    missionBookB1.setPosition({-53.52, 0.97, -35.66})
    missionBookB1.Book.setPage(41)
    local missionBookB2 = Global.call('getMissionBookB2')
    missionBookB2.setScale({2.0,1.0,2.0})
    missionBookB2.setPosition({-47.86, 0.97, -35.63})
    missionBookB2.Book.setPage(42)
end