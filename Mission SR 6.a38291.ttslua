missionSR6Positions = {
    hiddenCaveLoc1 = {{-4.95, 1.09, -0.75},{-4.40, 1.09, -1.70},},
    hiddenCaveRot1 = {{0.06, 180.00, 359.93},{0.03, 300.00, 0.09},},
    miniHiddenCaveLoc1 = {{2.20, 1.11, 4.01},{2.75, 1.11, 3.06},{1.65, 1.11, 3.06}},
    miniHiddenCaveRot1 = {{359.91, 60.00, 359.99},{0.06, 180.15, 359.93},{0.03, 300.15, 0.09}},
    miniHiddenCaveLoc2 = {{5.50, 1.11, 2.11},{6.05, 1.11, 1.15},{4.95, 1.11, 1.15}},
    miniHiddenCaveRot2 = {{359.91, 60.00, 359.99},{0.06, 180.15, 359.93},{0.03, 300.15, 0.09}},
    miniHiddenCaveLoc3 = {{5.50, 1.10, -3.61},{6.05, 1.10, -4.56},{4.95, 1.10, -4.56}},
    miniHiddenCaveRot3 = {{359.91, 60.00, 359.99},{0.06, 180.15, 359.93},{0.03, 300.15, 0.09}},
    stalagmites = {{-2.75, 2.23, 4.96},{0.55, 2.22, 1.15},{-1.65, 2.23, 1.15}},
    grunts = {{-2.20, 2.23, 2.10},{-1.10, 2.23, 2.10},{-0.55, 2.24, 3.06}},
    webspitters = {{-1.10, 2.23, 0.20}},
    explorationTiles = {{-3.85, 2.35, 4.96},{-1.10, 2.35, 4.01},{-0.55, 2.35, 1.15},
    {0.00, 2.34, 0.20},{1.10, 2.35, -5.52}},
    minerals = {{4.40, 1.21, 0.20},{6.60, 1.21, 0.20},{6.05, 1.21, -2.66},
    {4.40, 1.20, -3.61},{1.65, 1.20, -6.47},{0.55, 1.19, -6.47},{-3.30, 1.19, -5.52}
    {-1.65, 1.20, -2.66},{0.00, 1.20, -1.71}}
}

function setupMissionSR6()
    print("Launching Mission 6: Hard to Reach Riches\nGood Luck Miners!\n")

    local caveBag = Global.call('getCaveBag') -- need to call global function to get proper object ID

    params={
        bag = caveBag,
        ID = Global.call('getDropPodGUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-5.50, 1.22, 4.01},
            rotation = {359.91, 60.00, 179.99},
            guid = Global.call('getDropPodGUID'),
            -- Lock tiles afer spawn
            --callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup Drop Pod, object is not in cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveSeg1GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {2.20, 1.23, 0.20},
            rotation = {359.90, 59.99, 179.98},
            guid = Global.call('getCaveSeg1GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveSeg2GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-1.65, 1.24, 3.06},
            rotation = {359.95, 0.00, 180.07},
            guid = Global.call('getCaveSeg2GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveSeg3GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {0.00, 1.24, -3.61},
            rotation = {0.06, 180.01, 179.93},
            guid = Global.call('getCaveSeg3GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave, cave tiles are not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getHexPit3GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {1.65, 1.26, -2.66},
            rotation = {359.39, 300.01, 359.01},
            guid = Global.call('getHexPit3GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup pits, pit tiles are not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveEntrance1GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-0.55, 1.24, 4.96},
            rotation = {0.0,0.0,0.0},
            guid = Global.call('getCaveEntrance1GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave exit 1, it is not in the cave bag')
    end

    params={
        bag = caveBag,
        ID = Global.call('getCaveEntrance2GUID'),
    }
    if Global.call('isInBag',params) then
        caveBag.takeObject({
            position = {-2.20, 1.24, -5.52},
            rotation = {0.0,0.0,0.0},
            guid = Global.call('getCaveEntrance2GUID'),
            -- Lock tiles afer spawn
            callback="afterSpawnLock", callback_owner=Global
        })
    else
        print('Warning: Unable to setup cave exit 2, it is not in the cave bag')
    end

    -- Hidden cave segments
    local hiddenCaveBag = Global.call('getHiddenCaveBag') -- need to call global function to get proper object ID
    hiddenCaveBag.shuffle()

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',hiddenCaveBag) then
        hiddenCaveBag.takeObject({
            position = missionSR6Positions.hiddenCaveLoc1[randomIndex],
            rotation = missionSR6Positions.hiddenCaveRot1[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    local miniHiddenCaveBag = Global.call('getMiniHiddenCaveBag')
    miniHiddenCaveBag.shuffle()

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',miniHiddenCaveBag) then
        miniHiddenCaveBag.takeObject({
            position = missionSR6Positions.miniHiddenCaveLoc1[randomIndex],
            rotation = missionSR6Positions.miniHiddenCaveRot1[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',miniHiddenCaveBag) then
        miniHiddenCaveBag.takeObject({
            position = missionSR6Positions.miniHiddenCaveLoc2[randomIndex],
            rotation = missionSR6Positions.miniHiddenCaveRot2[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    params = {floor = 0.1, ceiling = 0.4,}
    randomIndex = Global.call('randInt',params)

    if not Global.call('isBagEmpty',miniHiddenCaveBag) then
        miniHiddenCaveBag.takeObject({
            position = missionSR6Positions.miniHiddenCaveLoc3[randomIndex],
            rotation = missionSR6Positions.miniHiddenCaveRot3[randomIndex]
        })
    else
        print("Warning: Unable to setup hidden cave segment, bag is empty")
    end

    -- need to call global function to get proper object ID
    local stalagmiteModelBag = Global.call('getStalagmiteModelBag')
    -- Stalagmites
    for i=1, 3 do
        stalagmiteModelBag.takeObject({
            position = missionSR5Positions.stalagmites[i],
            -- rotation = -- ADD RANDOM
        })
    end

    local gruntBag = Global.call('getGruntBag')
    for i=1, 3 do
        if not Global.call('isBagEmpty',gruntBag) then
            gruntBag.takeObject({
                position = missionSR5Positions.grunts[i],
                rotation = {0.0, 30.0 , 0.0}
            })
        else
            print("Warning: Unable to setup grunts, the grunt bag is empty")
            break
        end
    end

    local webspitterBag = Global.call('getWebSpitterBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',webspitterBag) then
            webspitterBag.takeObject({
                position = missionSR5Positions.webspitters[i],
                rotation = {0.0, 30.0 , 0.0}
            })
        else
            print("Warning: Unable to setup grunts, the webspitter bag is empty")
            break
        end
    end

    local explorationBag = Global.call('getExplorationBag')

    local lootBugBag = Global.call('getLootBugBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',lootBugBag) then
            explorationBag.putObject(lootBugBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, loot bug bag is empty")
        end
    end

    local barleyBulbBag = Global.call('getBarleyBulbBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',barleyBulbBag) then
            explorationBag.putObject(barleyBulbBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, barley bulb bag is empty")
            break
        end
    end

    local apocaBloomBag = Global.call('getApocaBloomBag')
    for i=1, 4 do
        if not Global.call('isBagEmpty',apocaBloomBag) then
            explorationBag.putObject(apocaBloomBag.takeObject())
        else
            print("Warning: Unable to set up exploration tokens, apoca bloom bag is empty")
            break
        end
    end

    explorationBag.shuffle()
    for i=1, 5 do
        if not Global.call('isBagEmpty',explorationBag) then
            explorationBag.takeObject({
                position = missionSR6Positions.explorationTiles[i],
                rotation = {0.0, 0.0, 180.0}
            })
        else
            print("Warning: Unable to setup exploration tokens, the bag is empty")
            break
        end
    end

    -- Generating Mineral Bag
    local mineralBag = Global.call('getMineralBag')

    local goldBag = Global.call('getGoldBag')
    for i=1, 3 do
        if not Global.call('isBagEmpty',goldBag) then
            mineralBag.putObject(goldBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the gold bag is empty")
        end
    end

    local nitraBag = Global.call('getNitraBag')
    for i=1, 1 do
        if not Global.call('isBagEmpty',nitraBag) then
            mineralBag.putObject(nitraBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the nitra bag is empty")
            break
        end
    end

    local aquardBag = Global.call('getAquardBag')
    for i=1, 5 do
        if not Global.call('isBagEmpty',aquardBag) then
            mineralBag.putObject(aquardBag.takeObject())
        else
            print("Warning: Unable to set up minerals, the aquard bag is empty")
            break
        end
    end

    -- Shuffling Minerals
    mineralBag.shuffle()

    -- Placing Minerals
    for i=1, 9 do
        if not Global.call('isBagEmpty',mineralBag) then
            mineralBag.takeObject({
                position = missionSR6Positions.minerals[i]
            })
        else
            print("Warning: Unable to set up minerals, the bag is empty")
        end
    end

    local missionBookB1 = Global.call('getMissionBookSR1')
    missionBookB1.setScale({2.0,1.0,2.0})
    missionBookB1.setPosition({-53.52, 0.97, -35.66})
    missionBookB1.Book.setPage(33)
    local missionBookB2 = Global.call('getMissionBookSR2')
    missionBookB2.setScale({2.0,1.0,2.0})
    missionBookB2.setPosition({-47.86, 0.97, -35.63})
    missionBookB2.Book.setPage(34)
end
