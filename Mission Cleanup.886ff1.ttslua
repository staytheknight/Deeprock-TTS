function onLoad()
    cleanupButton()
    swarmBlock_GUID = '60a4ea'
    swarmBlock = getObjectFromGUID(swarmBlock_GUID)
    swarmEndScriptBox_GUID = '54c7e7'
    swarmEndScriptBox = getObjectFromGUID(swarmEndScriptBox_GUID)

    missionBook = Global.call('getMissionBook')
    missionBoard_GUID = 'd8201c'
    missionBoard = getObjectFromGUID(missionBoard_GUID)

    explorationBag = Global.call('getExplorationBag')

    exclaimTilesBag = Global.call('getExclamationTilesBag')

    caveBag = Global.call('getCaveBag')
    biomeCaveBag = Global.call('getBiomeCaveBag')
    hiddenCaveBag = Global.call('getHiddenCaveBag')

    geyserBag = Global.call('getGeyserBag')
    explodingPlantsBag = Global.call('getExplodingPlantsBag')

    pAmmoBag = getObjectFromGUID('16ca6a')
    sAmmoBag = getObjectFromGUID('941a5f')
    wAmmoBag = Global.call('getWeaponUpgradeBag')

    apocaBloomBag = Global.call('getApocaBloomBag')
    barleyBulbBag = Global.call('getBarleyBulbBag')
    fossilBag = Global.call('getFossilBag')
    redSugarBag = Global.call('getRedSugarBag')
    lootBugBag = Global.call('getLootBugBag')
    eggBag = Global.call('getEggBag')

    nitraBag = Global.call('getNitraBag')
    goldBag = Global.call('getGoldBag')
    morkiteBag = Global.call('getMorkiteBag')
    aquardBag = Global.call('getAquardBag')

    spitballerBag = Global.call('getSpitballerBag')
    broodNexusBag = Global.call('getbroodNexusBag')
    webspitterBag = Global.call('getWebSpitterBag')
    gruntBag = Global.call('getGruntBag')
    slasherBag = Global.call('getSlasherBag')
    exploderBag = Global.call('getExploderBag')
    macteraBag = Global.call('getMacteraBag')
    wardenBag = Global.call('getWardenBag')
    praetorianBag = Global.call('getPraetorianBag')
    opressorBag = Global.call('getOpressorBag')

    swarmDeck = Global.call('getSwarmDeck')
    resupplyDeck = Global.call('getResupplyDeck')

end

function swarmBlockCheck()
    objectsInSwarmZone = swarmEndScriptBox.getObjects()
    blockFound = false

    -- Checks to see if the swarm threat token is in the final spot
    for _, object in ipairs(objectsInSwarmZone) do
        if object == swarmBlock then
            blockFound = true
        end
    end

    -- This boolean was set up since it can't be put inside the
    -- object pair check for some reason (maybe because it's inside a for loop)
    if blockFound == true then
        return true
    else
        return false
    end
end

function cleanupButton()
    self.clearButtons()

    self.createButton(
        {click_function='confirmationButton', function_owner=self, label='Cleanup ?',
        position={0.0 , 0.01 , 0.0}, rotation={0,0,0}, width=1000, height=700, font_size=200,
        scale={0.9,0.9,0.9}, color={0.0, 0.0, 0.0, 255.0}, font_color={252.8,245.0,0.0,255.0},
        tooltip='Cleanup current mission ?'}
    )
end

function confirmationButton()

    -- Checks to see if the swarm threat token is in the last spot
    -- If it is, bring up the cleanup buttons
    if swarmBlockCheck() then

        self.clearButtons()

        print("Place all objects on the playmat you wish to be returned to original positions before pressing confirm\n")

        self.createButton(
            {click_function='emptyExploreBags', function_owner=self, label='Confirm',
            position={0.0 , 0.01 , -0.8}, rotation={0,0,0}, width=1000, height=700, font_size=200,
            scale={0.9,0.9,0.9}, color={0.0, 0.0, 0.0, 255.0}, font_color={252.8,245.0,0.0,255.0},
            tooltip='Confirm cleanup'}
        )

        self.createButton(
            {click_function='cleanupButton', function_owner=self, label='Cancel',
            position={0.0 , 0.01 , 0.8}, rotation={0,0,0}, width=1000, height=700, font_size=200,
            scale={0.9,0.9,0.9}, color={0.0, 0.0, 0.0, 255.0}, font_color={252.8,245.0,0.0,255.0},
            tooltip='Cancel cleanup'}
            )
    else
        print("Please place the swarm threat track token on the final spot of the swarm threat track in order to perform a cleanup function")
        print("It's the black cube\n")
    end
end

-- Function empties the explore bags first and places objects on the board before doing mission cleanup
-- Waits a few moments for the objects to travel to the board as an issue happened before
-- where the objects travel time to the cleanup zone would take too long and the cleanup
-- algorithm would happen before the objects hit the table
function emptyExploreBags()
    while not Global.call('isBagEmpty',explorationBag)
    do
        explorationBag.takeObject({
            position = {1.10, 2.20, -1.71},
            smooth = false
        })
    end

    Wait.frames(Cleanup, 30)
end

function Cleanup()
    print("Performing Cleanup\n")

    self.clearButtons()

    local zone = Global.call('getCleanupZone')
    local objectsInZone = zone.getObjects()

    for _, object in ipairs(objectsInZone) do

        -- TODO: Turn this into a k,v database
        -- name / gm note of object ,,, where it goes back to

        -- unlocks the object (this is to prevent locked objects from being put
        -- back in bags, and when they're locked and pulled out they can't move)
        object.locked = false

        -- Cleanup Cave Segments
        if object.getGMNotes() == "caveSeg" then
            caveBag.putObject(object)
        end

        if object.getGMNotes() == "BCaveSeg" then
            biomeCaveBag.putObject(object)
        end

        if object.getGMNotes() == "HiddenCave" then
            hiddenCaveBag.putObject(object)
        end

        -- Cleanup Exploration Tiles
        if object.getGMNotes() == "ApocaBloom" then
            apocaBloomBag.putObject(object)
        end

        if object.getGMNotes() == "StarchNut" then
            barleyBulbBag.putObject(object)
        end

        if object.getGMNotes() == "Fossil" then
            fossilBag.putObject(object)
        end

        if object.getGMNotes() == "RedSugar" then
            redSugarBag.putObject(object)
        end

        if object.getGMNotes() == "LootBugs" then
            lootBugBag.putObject(object)
        end

        if object.getGMNotes() == "Eggs" then
            eggBag.putObject(object)
        end

        -- Cleanup Minerals
        if object.getName() == "Morkite" then
            morkiteBag.putObject(object)
        end

        if object.getName() == "Nitra" then
            nitraBag.putObject(object)
        end

        if object.getName() == "Gold" then
            goldBag.putObject(object)
        end

        if object.getName() == "Aquarq" then
            aquardBag.putObject(object)
        end

        -- Cleanup Glyphids
        if object.getName() == "Grunt" then
            gruntBag.putObject(object)
        end

        if object.getName() == "Brood Nexus" then
            broodNexusBag.putObject(object)
        end

        if object.getName() == "Spitball Infector" then
            spitballerBag.putObject(object)
        end

        if object.getName() == "Webspitter" then
            webspitterBag.putObject(object)
        end

        if object.getName() == "Exploder" then
            exploderBag.putObject(object)
        end

        if object.getName() == "Slasher" then
            slasherBag.putObject(object)
        end

        if object.getName() == "Mactera Spawn" then
            macteraBag.putObject(object)
        end

        if object.getName() == "Warden" then
            wardenBag.putObject(object)
        end

        if object.getName() == "Praetorian" then
            praetorianBag.putObject(object)
        end

        if object.getName() == "Opressor" then
            opressorBag.putObject(object)
        end

        -- Cleanup Stalagmite (destroy, since infinite bag, don't need to put back)
        if object.getName() == "Stalagmite" then
            object.destruct()
        end

        if object.getGMNotes() == "geyser" then
            geyserBag.putObject(object)
        end

        if object.getGMNotes() == "explodingPlants" then
            explodingPlantsBag.putObject(object)
        end

        -- Misc Tiles
        if object.getGMNotes() == "MiscToken" then
            exclaimTilesBag.putObject(object)
        end


        -- Character stuff
        if object.getName() == "Bosco" then
            object.setPositionSmooth({12.65, 0.96, -10.28},true,false)
        end

        if object.getName() == "Resupply Pod" then
            object.setPosition{8.25, 0.96, 10.68}
        end

        if object.getName() == "Engineer" then
            object.setPosition({-0.55, 1.05, -14.09})
        end

        if object.getName() == "Sentry Gun" then
            object.setPositionSmooth({-1.10, 1.10, -18.85},true,false)
        end

        if object.getName() == "Platform" then
            object.setPositionSmooth({0.00, 1.06, -18.85},true,false)
        end

        if object.getName() == "Driller" then
            object.setPosition{13.75, 1.05, -0.75}
        end

        if object.getName() == "Flame" then
            object.setPositionSmooth({19.25, 1.06, -0.75},true,false)
        end

        if object.getName() == "Gunner" then
            object.setPosition{0.55, 1.05, 14.49}
        end

        if object.getName() == "Shield" then
            object.setPosition{1.10, 1.06, 19.25}
        end

        if object.getName() == "Zipline" then
            object.setPositionSmooth({0.00, 1.03, 19.25},true,false)
        end

        if object.getName() == "Scout" then
            object.setPosition{-14.30, 1.05, 0.20}
        end

        if object.getName() == "Flare" then
            object.setPositionSmooth({-18.70, 1.06, 0.20},true,false)
        end

        if object.getGMNotes() == "PAmmo" then
            pAmmoBag.putObject(object)
        end

        if object.getGMNotes() == "SAmmo" then
            sAmmoBag.putObject(object)
        end

        if object.getGMNotes() == "wUpgrade" then
            wAmmoBag.putObject(object)
        end

        if object.getGMNotes() == "swarmCard" then
            swarmDeck.putObject(object)
        end

    end

    swarmBlock.setPosition({-8.24, 1.37, -8.91})

    -- Brings the mission book back to the first page
    missionBook.Book.setPage(0)

    -- relocks the mission board as it gets unlocked during the cleanup process
    missionBoard.locked = true

    -- Puts the cleanup button back
    cleanupButton()

    -- these decks like to go inside the mission Board after the board changes
    -- state - so the location of these decks is forced

    swarmDeck.setPosition({-3.66, 2.20, 7.92})
    resupplyDeck.setPosition({7.20, 2.20, 7.99})

end